version: '2'
services:
  icinga2:
    image: necator94/icinga2_stack:latest
    # build:
    #  context: ./
    #  dockerfile: Dockerfile
    restart: always
    # Set your hostname to the FQDN under which your
    # sattelites will reach this container
    hostname: icinga.dessau.net
    environment:
      TZ: Europe/Berlin
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} 
      DEFAULT_MYSQL_HOST: mysql
      # Important: keep the hostname graphite the same as
      # the name of the graphite docker-container
      ICINGA2_FEATURE_INFLUXDB: 'true'
      ICINGA2_FEATURE_INFLUXDB_HOST: influxdb
      ICINGA2_FEATURE_INFLUXDB_PORT: 8086
      ICINGA2_FEATURE_INFLUXDB_SEND_THRESHOLDS: 'true'
      ICINGA2_FEATURE_INFLUXDB_SEND_METADATA: 'false'
      ICINGA2_FEATURE_INFLUXDB_FLUSH_THRESHOLD: 1024 
      ICINGA2_FEATURE_INFLUXDB_FLUSH_INTERVAL: 10s 
      ICINGA2_FEATURE_INFLUXDB_DB_NAME: ${INFLUX_DATABASE}
      ICINGA2_FEATURE_INFLUXDB_DB_USER: ${INFLUX_USER}
      ICINGA2_FEATURE_INFLUXDB_USER_PASSWORD: ${INFLUX_USER_PASSWORD}
      ICINGA2_USER_FULLNAME: Icinga2 Docker Monitoring Instance
      ICINGAWEB2_ADMIN_USER: ${ICINGAWEB2_ADMIN_USER}
      ICINGAWEB2_ADMIN_PASS: ${ICINGAWEB2_ADMIN_PASS}
      # Icingaweb2 grafana module
      ICINGAWEB2_MODULE_GRAFANA: 'true'
      ICINGAWEB2_MODULE_GRAFANA_HOST: grafana:3000
      ICINGAWEB2_MODULE_GRAFANA_USERNAME: ${GRAFANA_USERNAME}
      ICINGAWEB2_MODULE_GRAFANA_PASSWORD: ${GRAFANA_PASSWORD}
      # Explicitly disabled features/modules
      ICINGA2_FEATURE_GRAPHITE: 'false'
    volumes:
      - icinga_cache:/var/cache/icinga2
      - icinga_var_lib:/var/lib/icinga2
   #   - icinga_php:/var/lib/php/sessions
      - icinga_var_spool:/var/spool/icinga2
      - icinga_plugins:/usr/lib/nagios/plugins
      - icinga_etc:/etc
      - icinga_log:/var/log
    ports:
      - "80:80"
      - "443:443"
      - "5665:5665"
        #network_mode: "host"
    dns:
      - ${DNS_IP}
    depends_on:
      - mysql
      - influxdb
      - grafana
    logging:
      driver: "none"
      options:
        max-size: 100m

  mysql:
    image: mariadb
    restart: always
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} 
    volumes:
      - mysql:/var/lib/mysql
      # If you have previously used the container's internal DB use:
      #- ./data/icinga/lib/mysql:/var/lib/mysql
    logging:
      driver: "json-file"
      options:
        max-size: 10m

  influxdb:
    image: influxdb:latest
    restart: always
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - influxdb-storage:/var/lib/influxdb
    environment:
      INFLUXDB_DB: ${INFLUX_DATABASE}
      INFLUXDB_ADMIN_USER: ${INFLUX_ADMIN_USERNAME}
      INFLUXDB_ADMIN_PASSWORD: ${INFLUX_ADMIN_PASSWORD}
      INFLUXDB_USER: ${INFLUX_USER}
      INFLUXDB_USER_PASSWORD: ${INFLUX_USER_PASSWORD}
      INFLUXDB_HTTP_AUTH_ENABLED: 'true'
      INFLUXDB_HTTP_LOG_ENABLED: 'false'
    logging:
      driver: "json-file"
      options:
        max-size: 10m

  chronograf:
    image: chronograf:latest
    restart: always
    ports:
      - '127.0.0.1:8888:8888'
    volumes:
      - chronograf-storage:/var/lib/chronograf
    depends_on:
      - influxdb
    environment:
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_USERNAME: ${INFLUX_ADMIN_USERNAME}
      INFLUXDB_PASSWORD: ${INFLUX_ADMIN_PASSWORD}
    logging:
      driver: "json-file"
      options:
        max-size: 10m

  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana-provisioning/:/etc/grafana/provisioning
    depends_on:
      - influxdb
    environment:
      # Custom env to build the grafana-provisioning/datasources
      DB_SOURCE: ${INFLUX_DATABASE}
      DB_USER: ${INFLUX_USER}
      DB_USER_PASSWORD: ${INFLUX_USER_PASSWORD}
      DB_URL: http://influxdb:8086
      
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USERNAME}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD}
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      # GF_LOG_FILTERS: rendering:debug
      # GF_LOG_LEVEL: debug
    logging:
      driver: "json-file"
      options:
        max-size: 10m

  renderer:
    image: grafana/grafana-image-renderer:latest
    restart: always
    ports:
      - '127.0.0.1:8081:8081'
    environment:
      BROWSER_TZ: Europe/Berlin
    logging:
      driver: "json-file"
      options:
        max-size: 10m

volumes:
  influxdb-storage:
  chronograf-storage:
  grafana-storage:
  mysql:
  icinga_cache:
  icinga_etc:
  icinga_log:
  icinga_var_lib:
  icinga_var_spool:
  icinga_plugins:
